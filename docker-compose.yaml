version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass $$REDIS_PASSWORD
    volumes:
      - redis_data:/data
    networks:
      - app-network

  celery:
    build: .
    command: celery -A beauty_salon_api worker -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - db
      - redis
    networks:
      - app-network

  celery-beat:
    build: .
    command: celery -A beauty_salon_api beat -l info
    volumes:
      - .:/app
    environment:
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - db
      - redis
    networks:
      - app-network

  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - media_volume:/app/media
    environment:
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    restart: on-failure
    depends_on:
      - db
      - redis
    networks:
      - app-network

  front:
    build:
      context: ./h-club_front
      dockerfile: Dockerfile
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - BACKEND_URL=https://te5td0main.ru/api
    networks:
      - app-network
    depends_on:
      - web

  admin_front:
    build:
      context: ./h-club_admin_front
      dockerfile: Dockerfile
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - BACKEND_URL=https://te5td0main.ru/api
    networks:
      - app-network
    depends_on:
      - web

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
      - media_volume:/app/media
    depends_on:
      - web
      - front
      - admin_front
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  media_volume:
  redis_data:

networks:
  app-network:
    driver: bridge